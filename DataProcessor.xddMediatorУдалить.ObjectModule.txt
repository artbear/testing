Перем Форма_МТ;


Процедура СохранитьНастройки() Экспорт
	
	Настройки = Инструменты.Выгрузить();
	ХранилищеОбщихНастроек.Сохранить("xddMediator.Инструменты",, Настройки);
	
	Настройки = ВариантыОткрыияФормПоУмолчанию();
	ЗаполнитьЗначенияСвойств(Настройки, ЭтотОбъект);
	ХранилищеОбщихНастроек.Сохранить("xddMediator.ВариантыОткрыияФорм",, Настройки);
	
КонецПроцедуры

Процедура ВосстановитьНастройки() Экспорт
	
	// Инструменты
	Настройки = ХранилищеОбщихНастроек.Загрузить("xddMediator.Инструменты");
	Если не ЗначениеЗаполнено(Настройки) Тогда
		Настройки = Новый ТаблицаЗначений;
	КонецЕсли;
	Инструменты.Загрузить(Настройки);
	
	ИнструментыПоУмолчанию = ИнструментыПоУмолчанию();
	
	Для каждого Строка из ИнструментыПоУмолчанию Цикл
		НайденнаяСтрока = Инструменты.Найти(Строка.Синоним, "Синоним");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Инструменты.Добавить(), Строка);
	КонецЦикла;
	
	// Варианты открыия форм
	НастройкиПоУмолчанию = ВариантыОткрыияФормПоУмолчанию();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкиПоУмолчанию);
	
	Настройки = ХранилищеОбщихНастроек.Загрузить("xddMediator.ВариантыОткрыияФорм");
	Если ЗначениеЗаполнено(Настройки) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
	КонецЕсли;
	
КонецПроцедуры

Функция ИнструментыПоУмолчанию()
	
	ИнструментыПоУмолчанию = Инструменты.Выгрузить(Новый Массив);
	
	ТабличныйДокумент = ПолучитьМакет("ИнструментыПоУмолчанию");
	
	Для счКол = 1 по ТабличныйДокумент.ШиринаТаблицы Цикл
		ИмяКолонки = ТабличныйДокумент.Область(1, счКол).Текст;
		Если ПустаяСтрока(ИмяКолонки) Тогда
			Продолжить;
		КонецЕсли;
		
		Для счСтр = 2 по ТабличныйДокумент.ВысотаТаблицы Цикл
			ЗначениеЯчейки = ТабличныйДокумент.Область(счСтр, счКол).Текст;
			Если ПустаяСтрока(ЗначениеЯчейки) Тогда
				Продолжить;
			КонецЕсли;
			
			ИндексСтроки = СчСтр - 2;
			
			Пока ИнструментыПоУмолчанию.Количество() < ИндексСтроки + 1 Цикл
				ИнструментыПоУмолчанию.Добавить();
			КонецЦикла;
			
			ИнструментыПоУмолчанию[ИндексСтроки][ИмяКолонки] = ЗначениеЯчейки;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ИнструментыПоУмолчанию;
	
КонецФункции

Функция ВариантыОткрыияФормПоУмолчанию()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ВариантОткрытияКонсолиЗапросов",				0);
	Настройки.Вставить("ВариантОткрытияДополнительнойИнформацииТестов",	1);
	Настройки.Вставить("ВариантОткрытияТестируемогоОбъекта",			0);
	
	Возврат Настройки;
	
КонецФункции

Функция ПолучитьПутьКИнструменту(ИмяИнструмента) Экспорт
	
	ВосстановитьНастройки();
	
	НайденнаяСтрока = Инструменты.Найти(ИмяИнструмента, "Идентификатор");
	
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		
		Возврат НайденнаяСтрока.Путь;
		
	КонецЕсли;
	
КонецФункции

Процедура ОткрытьИнструментыПриСтартеСистемы() Экспорт
	
	ВосстановитьНастройки();
	
	НайденныеСтроки = Инструменты.НайтиСтроки(Новый Структура("ОткрыватьПриСтарте", Истина));
	
	Для каждого Строка из НайденныеСтроки Цикл
		
		ОткрытьИнструмент(Строка.Идентификатор);
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ОткрытьИнструмент(ИдентификаторИнструмента) Экспорт
	
	НайденнаяСтрока = Инструменты.Найти(ИдентификаторИнструмента, "Идентификатор");
	
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		
		Попытка
			Форма = Вычислить(НайденнаяСтрока.Путь + ".ПолучитьФорму()");
			Форма.Открыть();
		Исключение
			Сообщить("Ошибки при открытии формы для " + ИдентификаторИнструмента);
		КонецПопытки;
		
		
	КонецЕсли;
	
КонецПроцедуры




Процедура ОбработатьОповещение(ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "xddКонсольЗапросов" И ВариантОткрытияКонсолиЗапросов > 0 Тогда
		ОткрытьМодально = (ВариантОткрытияКонсолиЗапросов = 2);
		ОткрытьКонсольЗапросов(Параметр, ОткрытьМодально);
		
	ИначеЕсли ИмяСобытия = "ОткрытьФорму" и ВариантОткрытияТестируемогоОбъекта > 0 Тогда
		ОткрытьМодально = (ВариантОткрытияТестируемогоОбъекта = 2);
		ОткрытьФормуОбъекта(Параметр, ОткрытьМодально);
		
	ИначеЕсли ИмяСобытия = "xddМониторТестирования" И ВариантОткрытияДополнительнойИнформацииТестов > 0 Тогда
		ОткрытьМодально = (ВариантОткрытияДополнительнойИнформацииТестов = 2);
		ОткрытьМониторТестирования(Параметр, ОткрытьМодально, Источник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуОбъекта(Объект, ОткрытьМодально)
	
	Форма = ПолучитьФорму();
	Если Форма = Неопределено Тогда
		ИмяОбработки = Метаданные().Имя;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяОбработки) Тогда
		Форма = Обработки[ИмяОбработки].ПолучитьФорму();
		ЗначениеВДанныеФормы(Объект, Форма.Объект);
	КонецЕсли;
	
	Если НЕ ОткрытьМодально Тогда
		Форма.Открыть();
		Возврат;
	КонецЕсли;
	
	Форма.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(ИмяОбработки) Тогда
		НовыйОбъект = ДанныеФормыВЗначение(Форма.Объект, Тип("ОбработкаОбъект."+ИмяОбработки));
		
		ЗаполнитьЗначенияСвойств(Объект, НовыйОбъект);
		
		Для каждого ТабличнаяЧасть из Объект.Метаданные().ТабличныеЧасти Цикл
			ИмяТабличнойЧасти = ТабличнаяЧасть.Имя;
			Объект[ИмяТабличнойЧасти].Загрузить(НовыйОбъект[ИмяТабличнойЧасти].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьКонсольЗапросов(ЗапросИлиОтчетСКД, ОткрытьМодально)
	
	КонсольОбъект = Обработки.xddQweryConsole.Создать();
	
	Если ТипЗнч(ЗапросИлиОтчетСКД) = Тип("Запрос") Тогда
		КонсольОбъект.ПоместитьЗапросВДерево(ЗапросИлиОтчетСКД);
	Иначе
		КонсольОбъект.ПоместитьЗапросыИзСКДВДерево(ЗапросИлиОтчетСКД);
	КонецЕсли;
	
	Форма = КонсольОбъект.ПолучитьФорму();
	
	Если ОткрытьМодально Тогда
		Форма.ОткрытьМодально();
	Иначе
		Форма.Открыть();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОткрытьМониторТестирования(Параметр, ОткрытьМодально, Источник)
	
	ОбработкаОбъект = ДанныеФормыВЗначение(Форма_МТ.Объект, Тип("ОбработкаОбъект.xddМониторТестирования"));
	ОбработкаОбъект.ДанныеДляОтображения_Добавить(Параметр, Источник);
	
	ЗначениеВДанныеФормы(ОбработкаОбъект, Форма_МТ.Объект);
	
	Если ОткрытьМодально Тогда
		Форма_МТ.ОткрытьМодально();
	Иначе
		Форма_МТ.Открыть();
	КонецЕсли;
	
КонецПроцедуры


Форма_МТ = Обработки.xddMonitor.ПолучитьФорму();
