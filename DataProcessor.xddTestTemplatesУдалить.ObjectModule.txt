
Процедура ПроведениеДокументов_ЛинейноеЗаполнениеРегистра(Ядро, Макет, ИмяРегистра) Экспорт
	// 	линейным заполнением считаем случаи, 
	//	когда каждой строке табличной части документа 
	//	всегда должна соответствовать одна и только одна запись регистра
	
	// 1. Проведение по тестируемому регистру должно быть вынесено в отдельную процедуру.
	// 2. Тестируемая процедура должна называться ПроведениеПоРегистру_<ИмяРегистра>()
	// 3. Тестируемая процедура должна вызываться без параметров
	
	
	ТестовыеДанные = Ядро.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Для каждого КлючИЗначение из ТестовыеДанные Цикл
		ВидДокумента = КлючИЗначение.Ключ;
		НаборТаблицПоДокументу = КлючИЗначение.Значение;
		
		ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента(Ядро, НаборТаблицПоДокументу, ВидДокумента, ИмяРегистра);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента(Ядро, НаборТаблицПоДокументу, ВидДокумента, ИмяРегистра)
	
	МетаданныеДокумента = Метаданные.Документы[ВидДокумента];
	МетаданныеРегистра = НайтиМетаданныеРегистраПоМетаданнымДокумента(МетаданныеДокумента, ИмяРегистра);
	
	Для каждого КлючИЗначение из НаборТаблицПоДокументу Цикл
		ТаблицаДвижений = КлючИЗначение.Значение;
		ИмяТаблицыДвжиений = КлючИЗначение.Ключ;
		
		ДополнитьТаблицуДвиженийМетаданными(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра);
		ДополнитьТаблицуДвиженийЗначениями(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра);
		
		//Если НЕ ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента_МетаданныеЗаполненыПолностью(ТаблицаДвижений) Тогда
			Расшифровка = ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента_ОшибкиЗаполнения(ТаблицаДвижений, Ядро);
			Оповестить("xddМониторТестирования", Расшифровка, "Ошибка заполнения таблицы "+ИмяТаблицыДвжиений+" по документу " + ВидДокумента);
		//КонецЕсли;
		
		ТабличныйДокумент = ПолучитьТабличныйДокументДляГенерацииДанных(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра, Ядро);
			Оповестить("xddМониторТестирования", ТабличныйДокумент, "Табличный документ для генерации данных таблицы "+ИмяТаблицыДвжиений+" по документу " + ВидДокумента);
			
		ОжидаемыйРезультат = Ядро.СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент).ОжидаемыйРезультат;
		
		ДокументОбъект = ОжидаемыйРезультат[0].Регистратор.ПолучитьОбъект();
		Выполнить("ДокументОбъект.ВыполнитьДвиженияПоРегистру_" + ИмяРегистра + "()");
		ФактическийРезультат = ДокументОбъект.Движения[ИмяРегистра].Выгрузить();
		
		Ядро.ПроверитьРавенствоТаблиц(ОжидаемыйРезультат, ФактическийРезультат, "Не совпали движения по регистру " + ИмяРегистра + " у документа " + ВидДокумента + " для таблицы " + ИмяТаблицыДвжиений);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьТаблицуДвиженийМетаданными(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра)
	
	Для каждого Строка из ТаблицаДвижений Цикл
		
		// заполняем поля регистра
		Если ПустаяСтрока(Строка.ИмяПоляРегистра) Тогда
			Строка.ИмяПоляРегистра = ПолеПоСинониму(Строка.СинонимПоляРегистра, МетаданныеРегистра);
		КонецЕсли;
		
		// заполняем поля документа
		Если ПустаяСтрока(Строка.ИмяПоляДокумента) Тогда
			ИмяТЧ = Строка.ИмяТабличнойЧасти;
			Строка.ИмяПоляДокумента = ПолеПоСинониму(Строка.ИмяПоляРегистра, МетаданныеДокумента, ИмяТЧ);
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяТабличнойЧасти) И НЕ ПустаяСтрока(Строка.ИмяПоляДокумента) Тогда
			Строка.ИмяТабличнойЧасти = ?(ПустаяСтрока(ИмяТЧ), "Шапка", ИмяТЧ);
		КонецЕсли;
		
		
		// заполняем тип значения
		Если Лев(Строка.ЗначениеЗаполнения, 1) = "=" Тогда
			Продолжить;
		ИначеЕсли НЕ ПустаяСтрока(Строка.ТипЗначения) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивТипов = ПолучитьМассивТиповДляПоляИзРегистра(Строка.ИмяПоляРегистра, МетаданныеРегистра);
		Если МассивТипов = Неопределено Тогда
			МассивТипов = ПолучитьМассивТиповДляПоляИзДокумента(Строка.ИмяПоляДокумента, МетаданныеДокумента, Строка.ИмяТабличнойЧасти);			
		КонецЕсли;
		
		Если НЕ МассивТипов = Неопределено Тогда
			Строка.ТипЗначения = ТипСтрокой(МассивТипов[0]);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры
Функция ПолучитьМассивТиповДляПоляИзДокумента(ИмяПоля, МетаданныеДокумента, ИмяТабличнойЧасти)
	
	Если ПустаяСтрока(ИмяПоля) Тогда
		МассивТипов = Неопределено;
	ИначеЕсли ПустаяСтрока(ИмяТабличнойЧасти) Тогда
		МассивТипов = Неопределено;
	ИначеЕсли нрег(ИмяТабличнойЧасти) = "шапка" Тогда
		МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеДокумента.Реквизиты);
	Иначе
		МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты);
	КонецЕсли;
	
	Возврат МассивТипов;
	
КонецФункции
Функция ПолучитьМассивТиповДляПоляИзРегистра(ИмяПоля, МетаданныеРегистра)
	
	МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеРегистра.СтандартныеРеквизиты);
	
	Если МассивТипов = Неопределено Тогда
		МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеРегистра.Измерения);
	КонецЕсли;
	
	Если МассивТипов = Неопределено Тогда
		МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеРегистра.Ресурсы);
	КонецЕсли;
	
	Если МассивТипов = Неопределено Тогда
		МассивТипов = ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, МетаданныеРегистра.Реквизиты);
	КонецЕсли;
	
	Возврат МассивТипов;
	
КонецФункции
Функция ПолучитьМассивТиповДляПоляИзКоллекции(ИмяПоля, КоллекцияМетаданных)
	
	Для каждого Реквизит из КоллекцияМетаданных Цикл
		Если НЕ Реквизит.Имя = ИмяПоля Тогда
			Продолжить;
		КонецЕсли;
		
		МассивТипов = Реквизит.Тип.Типы();
		Прервать;
		
	КонецЦикла;
	
	Возврат МассивТипов;
	
КонецФункции
Функция ТипСтрокой(Тип)
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат Строка(Тип);
	КонецЕсли;
	
	ТипСтрокой = ОбъектМетаданных.ПолноеИмя();
	
	Возврат СтрЗаменить(ТипСтрокой, ".", "Ссылка.");
	
КонецФункции

Функция ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента_МетаданныеЗаполненыПолностью(ТаблицаДвижений)
	
	Для каждого Строка из ТаблицаДвижений Цикл
		
		Если НЕ НачинаетсяСБуквы(Строка.ИмяПоляРегистра) Тогда // не сравниваем движения по этому полю
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяПоляРегистра) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяПоляДокумента) И ПустаяСтрока(Строка.ЗначениеЗаполнения) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Строка.ИмяПоляДокумента) И ПустаяСтрока(Строка.ИмяТабличнойЧасти) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяПоляДокумента) И НЕ ПустаяСтрока(Строка.ИмяТабличнойЧасти) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ЗначениеЗаполнения) И ПустаяСтрока(Строка.ТипЗначения) Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента_ОшибкиЗаполнения(ТаблицаДвижений, Ядро)
	
	ТабличныйДокумент = Ядро.ПолучитьТабличныйДокументПоТаблицеЗначений(ТаблицаДвижений);
	
	Для каждого Строка из ТаблицаДвижений Цикл
		счСтр = ТаблицаДвижений.Индекс(Строка) + 2;
		
		Если ПустаяСтрока(Строка.ИмяПоляРегистра) Тогда
			ТабличныйДокумент.Область(счСтр, 2).ЦветФона = WebЦвета.Лосось;
			Продолжить;
		КонецЕсли;
		
		Если НЕ НачинаетсяСБуквы(Строка.ИмяПоляРегистра) Тогда // не сравниваем движения по этому полю
			ТабличныйДокумент.Область(счСтр, 1, счСтр, 6).ЦветФона = WebЦвета.Золотистый;
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяПоляДокумента) И ПустаяСтрока(Строка.ЗначениеЗаполнения) Тогда
			ТабличныйДокумент.Область(счСтр, 4, счСтр, 5).ЦветФона = WebЦвета.Лосось;
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Строка.ИмяПоляДокумента) И ПустаяСтрока(Строка.ИмяТабличнойЧасти) Тогда
			ТабличныйДокумент.Область(счСтр, 3).ЦветФона = WebЦвета.Лосось;
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ИмяПоляДокумента) И НЕ ПустаяСтрока(Строка.ИмяТабличнойЧасти) Тогда
			ТабличныйДокумент.Область(счСтр, 3).ЦветФона = WebЦвета.Лосось;
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Строка.ЗначениеЗаполнения) И ПустаяСтрока(Строка.ТипЗначения) Тогда
			ТабличныйДокумент.Область(счСтр, 6).ЦветФона = WebЦвета.Лосось;
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ДополнитьТаблицуДвиженийЗначениями(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра)
	
	Отбор = Новый Структура("ЗначениеЗаполнения", "");
	НайденныеСтроки = ТаблицаДвижений.НайтиСтроки(Отбор);
	
	Для каждого Строка из НайденныеСтроки Цикл
		
		Если ЗначениеЗаполнено(Строка.ЗначениеЗаполнения) Тогда
			Продолжить;
		ИначеЕсли ПустаяСтрока(Строка.ТипЗначения) Тогда
			Продолжить;
		КонецЕсли;
		
		Если нрег(Строка.ТипЗначения) = "число" Тогда
			Строка.ЗначениеЗаполнения = 1;
		ИначеЕсли нрег(Строка.ТипЗначения) = "дата" Тогда
			Строка.ЗначениеЗаполнения = "20100101";
		Иначе
			Строка.ЗначениеЗаполнения = "*";
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныеЧасти = ТаблицаДвижений.Скопировать(,"ИмяТабличнойЧасти");
	ТабличныеЧасти.Свернуть("ИмяТабличнойЧасти");
	
	СтрокаСсылка = ТаблицаДвижений.Найти("Ссылка", "ИмяПоляДокумента");
	Для каждого Строка из ТабличныеЧасти Цикл
		Если нрег(Строка.ИмяТабличнойЧасти) = "шапка" Тогда
			Продолжить;
		ИначеЕсли ПустаяСтрока(Строка.ИмяТабличнойЧасти) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСсылка);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
КонецПроцедуры
Функция ПолучитьТабличныйДокументДляГенерацииДанных(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра, Ядро)
	
	ДанныеДляТабличногоДокумента = ПолучитьСводнуюТаблицуПолей(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра);
	
	СводныйТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТаблицыБД = ДанныеДляТабличногоДокумента.Скопировать(,"ИмяТаблицыБД");
	ТаблицыБД.Свернуть("ИмяТаблицыБД");
	Для каждого Строка из ТаблицыБД Цикл
		
		НомерСтроки = СводныйТабличныйДокумент.ВысотаТаблицы+1;
		СводныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = "ТИП";
		СводныйТабличныйДокумент.Область(НомерСтроки, 2).Текст = Строка.ИмяТаблицыБД;
		Если Найти(нрег(Строка.ИмяТаблицыБД), "регистр") Тогда
			НомерСтроки = СводныйТабличныйДокумент.ВысотаТаблицы+1;
			СводныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = "ИМЯ";
			СводныйТабличныйДокумент.Область(НомерСтроки, 2).Текст = "ОжидаемыйРезультат";
		КонецЕсли;

		
		Отбор = Новый Структура("ИмяТаблицыБД", Строка.ИмяТаблицыБД);
		НайденныеСтроки = ДанныеДляТабличногоДокумента.НайтиСтроки(Отбор);
		ТаблицаПоОдномуДокументу = ТранспорироватьТаблицуПолей(ДанныеДляТабличногоДокумента.Скопировать(НайденныеСтроки));
		ТабличныйДокументПоОдномуДокументу = Ядро.ПолучитьТабличныйДокументПоТаблицеЗначений(ТаблицаПоОдномуДокументу);
		
		НомерСтроки = СводныйТабличныйДокумент.ВысотаТаблицы+1;
		ВысотаОбласти = ТабличныйДокументПоОдномуДокументу.ВысотаТаблицы;
		ШиринаОбласти = ТабличныйДокументПоОдномуДокументу.ШиринаТаблицы;
		ОбластьПриемник = СводныйТабличныйДокумент.Область(
								НомерСтроки,
								3, 
								НомерСтроки + ВысотаОбласти ,
								3+ШиринаОбласти-1);
		ИсходнаяОбласть = ТабличныйДокументПоОдномуДокументу.Область(
								1,
								1,
								ВысотаОбласти+1,
								ШиринаОбласти
								);
		СводныйТабличныйДокумент.ВставитьОбласть(
								ИсходнаяОбласть,
								ОбластьПриемник
								);
	КонецЦикла;
	
	Возврат СводныйТабличныйДокумент;
КонецФункции
Функция ПолучитьСводнуюТаблицуПолей(ТаблицаДвижений, МетаданныеДокумента, МетаданныеРегистра)
	
	ДанныеДляТабличногоДокумента = Новый ТаблицаЗначений;
	ДанныеДляТабличногоДокумента.Колонки.Добавить("ИмяТаблицыБД");
	ДанныеДляТабличногоДокумента.Колонки.Добавить("ИмяТабличнойЧасти");
	ДанныеДляТабличногоДокумента.Колонки.Добавить("Поле");
	ДанныеДляТабличногоДокумента.Колонки.Добавить("ТипЗначения");
	ДанныеДляТабличногоДокумента.Колонки.Добавить("ЗначениеЗаполнения");
	
	Для каждого Строка из ТаблицаДвижений Цикл
		
		Если НачинаетсяСБуквы(Строка.ИмяПоляРегистра) Тогда
			НоваяСтрока = ДанныеДляТабличногоДокумента.Добавить();
			НоваяСтрока.ИмяТаблицыБД = МетаданныеРегистра.ПолноеИмя();
			НоваяСтрока.Поле = Строка.ИмяПоляРегистра;
			НоваяСтрока.ТипЗначения = Строка.ТипЗначения;
			НоваяСтрока.ЗначениеЗаполнения = Строка.ЗначениеЗаполнения;
		КонецЕсли;
		
		Если НачинаетсяСБуквы(Строка.ИмяПоляДокумента) Тогда
			НоваяСтрока = ДанныеДляТабличногоДокумента.Добавить();
			НоваяСтрока.ИмяТаблицыБД = МетаданныеДокумента.ПолноеИмя();
			Если НЕ нрег(Строка.ИмяТабличнойЧасти) = "шапка" Тогда
				НоваяСтрока.ИмяТаблицыБД = НоваяСтрока.ИмяТаблицыБД + ".ТабличнаяЧасть." + Строка.ИмяТабличнойЧасти;
			КонецЕсли;
			НоваяСтрока.Поле = Строка.ИмяПоляДокумента;
			НоваяСтрока.ТипЗначения = Строка.ТипЗначения;
			НоваяСтрока.ЗначениеЗаполнения = Строка.ЗначениеЗаполнения;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеДляТабличногоДокумента;
	
КонецФункции
Функция ТранспорироватьТаблицуПолей(ТаблицаПоОдномуДокументу)
	
	ТранспорированнаяТаблица = Новый ТаблицаЗначений;
	ТранспорированнаяТаблица.Добавить();
	ТранспорированнаяТаблица.Добавить();
	
	Для каждого Строка из ТаблицаПоОдномуДокументу Цикл
		Если НЕ ТранспорированнаяТаблица.Колонки.Найти(Строка.Поле) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Колонка = ТранспорированнаяТаблица.Колонки.Добавить(Строка.Поле);
		ТранспорированнаяТаблица[0][Колонка.Имя] = Строка.ТипЗначения;
		ТранспорированнаяТаблица[1][Колонка.Имя] = Строка.ЗначениеЗаполнения;
	КонецЦикла;
	
	Возврат ТранспорированнаяТаблица;
	
КонецФункции

Процедура ПроведениеДокументов_ЛинейноеЗаполнениеРегистра_ПоВидуДокумента_ПровестиПоРегистру()
КонецПроцедуры


Функция ПолеПоСинониму(Синоним, МетаТаблица, ИмяТабличнойЧасти = "")
	
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		Коллекция = МетаТаблица.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты;
		Возврат НайтиРеквизитПоСинонимуВКоллекции(Синоним, Коллекция);
	КонецЕсли;
	
	СтруктураКолекций = Новый Структура("СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты");
	ЗаполнитьЗначенияСвойств(СтруктураКолекций, МетаТаблица);
	
	Для каждого КлючИЗначение из СтруктураКолекций Цикл
		Коллекция = СтруктураКолекций[КлючИЗначение.Ключ];
		
		Если Коллекция = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = НайтиРеквизитПоСинонимуВКоллекции(Синоним, Коллекция);
		
		Если ЗначениеЗаполнено(Значение) Тогда
			Возврат Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Буфер = Новый Структура("ТабличныеЧасти");
	ЗаполнитьЗначенияСвойств(Буфер, МетаТаблица);
	Если Буфер.ТабличныеЧасти = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для каждого ТабличнаяЧасть из МетаТаблица.ТабличныеЧасти Цикл
		Коллекция = ТабличнаяЧасть.Реквизиты;
		Значение = НайтиРеквизитПоСинонимуВКоллекции(Синоним, Коллекция);
		
		Если ЗначениеЗаполнено(Значение) Тогда
			ИмяТабличнойЧасти = ТабличнаяЧасть.Имя;
			Возврат Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Функция НайтиРеквизитПоСинонимуВКоллекции(СинонимИмяРеквизита, Коллекция)
	
	ЗначениеПоиска = СтрЗаменить(нрег(СинонимИмяРеквизита), " ", "");
	
	Для каждого Реквизит из Коллекция Цикл
		
		Синоним = СтрЗаменить(нрег(Реквизит.Синоним), " ", "");
		Имя = нрег(Реквизит.Имя);
		
		Если ЗначениеПоиска = Имя Тогда
		ИначеЕсли ЗначениеПоиска = Синоним Тогда
		Иначе
			Продолжить;
		КонецЕсли;
			
		Возврат Реквизит.Имя;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция НайтиМетаданныеРегистраПоМетаданнымДокумента(МетаданныеДокумента, ИмяРегистра)
	
	Для каждого Движение из МетаданныеДокумента.Движения Цикл
		
		Если Движение.Имя = ИмяРегистра Тогда
			Возврат Движение;
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция НачинаетсяСБуквы(Слово) 
	
	ПервыйСимвол = Лев(Слово, 1);
	Возврат ВРег(ПервыйСимвол) <> НРег(ПервыйСимвол);
	
КонецФункции


