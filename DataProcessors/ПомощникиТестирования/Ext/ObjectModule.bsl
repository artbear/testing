
/////////////////////////
// 	Проверка утверждений

Процедура ПроверитьРавенствоТаблиц(Таблица1, Таблица2, Сообщение = "") Экспорт
	
	СводнаяТаблица = Таблица1.Скопировать();
	
	ИменаКолонокГруппировки = "";
	Для каждого Колонка из СводнаяТаблица.Колонки Цикл
		ИменаКолонокГруппировки = ИменаКолонокГруппировки + нрег(Колонка.Имя) + ",";
	КонецЦикла;
	ИменаКолонокГруппировки = Лев(ИменаКолонокГруппировки, СтрДлина(ИменаКолонокГруппировки)-1);
	
	ИмяКолонкиСуммирования = "___СВЕРКА___";
	СводнаяТаблица.Колонки.Вставить(0,ИмяКолонкиСуммирования, Новый ОписаниеТипов("Число"));
	СводнаяТаблица.ЗаполнитьЗначения(-1, ИмяКолонкиСуммирования);
	
	Для каждого Строка из Таблица2 Цикл
		НоваяСтрока = СводнаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока[ИмяКолонкиСуммирования] = 1;
	КонецЦикла;
	
	СводнаяТаблица.Свернуть(ИменаКолонокГруппировки, ИмяКолонкиСуммирования);
	Отбор = Новый Структура(ИмяКолонкиСуммирования, 0);
	Если СводнаяТаблица.НайтиСтроки(Отбор).Количество() = СводнаяТаблица.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СводнаяТаблицаХранилище = Новый ХранилищеЗначения(СводнаяТаблица);
	#Если Клиент Тогда
	Оповестить("РазличияВТаблицах", СводнаяТаблицаХранилище, "Помощники");
	#КонецЕсли
	
	ВызватьИсключение "Таблицы различны: " + Сообщение;
КонецПроцедуры

Процедура ПроверитьРавенствоСтруктур(Структура1, Структура2, Сообщение = "") Экспорт
	СравнениеСтруктур = Новый ТаблицаЗначений;
	СравнениеСтруктур.Колонки.Добавить("Ключ");
	СравнениеСтруктур.Колонки.Добавить("Значение");
	СравнениеСтруктур.Колонки.Добавить("Сверка", Новый ОписаниеТипов("Число"));
	
	Для каждого КлючИЗначение из Структура1 Цикл
		НоваяСтрока = СравнениеСтруктур.Добавить();
		НоваяСтрока.Ключ = КлючИЗначение.Ключ;
		НоваяСтрока.Значение = КлючИЗначение.Значение;
		НоваяСтрока.Сверка = -1;
	КонецЦикла;
	
	Для каждого КлючИЗначение из Структура2 Цикл
		НоваяСтрока = СравнениеСтруктур.Добавить();
		НоваяСтрока.Ключ = КлючИЗначение.Ключ;
		НоваяСтрока.Значение = КлючИЗначение.Значение;
		НоваяСтрока.Сверка = 1;
	КонецЦикла;
	
	СравнениеСтруктур.Свернуть("Ключ,Значение","Сверка");
	Отбор = Новый Структура("Сверка", 0);
	Если СравнениеСтруктур.НайтиСтроки(Отбор).Количество() = СравнениеСтруктур.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ВызватьИсключение "Структуры различны: " + Сообщение;
КонецПроцедуры

Процедура ПроверитьРавенствоМассивов(Массив1, Массив2, Сообщение = "") Экспорт
	СравнениеМассивов = Новый ТаблицаЗначений;
	СравнениеМассивов.Колонки.Добавить("Элемент");
	СравнениеМассивов.Колонки.Добавить("Сверка", Новый ОписаниеТипов("Число"));
	
	Для каждого Элемент из Массив1 Цикл
		НоваяСтрока = СравнениеМассивов.Добавить();
		НоваяСтрока.Элемент = Элемент;
		НоваяСтрока.Сверка = -1;
	КонецЦикла;
	
	Для каждого Элемент из Массив2 Цикл
		НоваяСтрока = СравнениеМассивов.Добавить();
		НоваяСтрока.Элемент = Элемент;
		НоваяСтрока.Сверка = 1;
	КонецЦикла;
	
	СравнениеМассивов.Свернуть("Элемент","Сверка");
	Отбор = Новый Структура("Сверка", 0);
	Если СравнениеМассивов.НайтиСтроки(Отбор).Количество() = СравнениеМассивов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ВызватьИсключение "Массивы различны: " + Сообщение;
	
КонецПроцедуры


/////////////////////////
//	Получение данных

Функция ПолучитьДанныеИзОбъектаПоТаблицеЭталону(Объект, ТаблицаЭталон) Экспорт
	Если Ложь Тогда
		ТаблицаЭталон = Новый ТаблицаЗначений;
	КонецЕсли;
	
	
	ТаблицаРезультат = ТаблицаЭталон.Скопировать(Новый Массив);
	
	НоваяСтрока = ТаблицаРезультат.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект);
	
	Возврат ТаблицаРезультат;
	
КонецФункции


Функция ОткрытьФормуОбъекта(ПолноеИмяФормы, ПараметрыОткрываемойФормы = Неопределено) Экспорт
	#Если Клиент Тогда
	Возврат ОткрытьФорму(ПолноеИмяФормы, ПараметрыОткрываемойФормы);
	#КонецЕсли
КонецФункции

&НаКлиенте
Функция ПодключитьВнешнююОбработкуНаКлиенте(ПутьКФайлуНаКлиенте)
    АдресХранилища = "";
	ПоместитьФайл(АдресХранилища, ПутьКФайлуНаКлиенте, , Ложь);
	ИмяОбработки = ПодключитьВнешнююОбработкуНаСервере(АдресХранилища);
	Возврат ИмяОбработки;
КонецФункции

&НаСервере
Функция ПодключитьВнешнююОбработкуНаСервере(АдресХранилища)
	Возврат ВнешниеОбработки.Подключить(АдресХранилища,,Ложь);
КонецФункции
