Перем КонтекстЯдра;
Перем Ожидаем;

#Область _ // Предопределенные процедуры

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры
Процедура ПередЗапускомТеста() Экспорт
    НачатьТранзакцию();
КонецПроцедуры
Процедура ПослеЗапускаТеста() Экспорт
    Если ТранзакцияАктивна() Тогда
        ОтменитьТранзакцию();
    КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.СтрогийПорядокВыполнения();
	
	НаборТестов.НачатьГруппу("Название группы тестов");
	НаборТестов.Добавить("ТестДолжен_Что");
	
КонецПроцедуры

#КонецОбласти


#Область Тесты

Процедура ТестДолжен_Что() Экспорт
	ТестовыеДанные = ТестовыеДанные("ТестДолжен_Что");
	План = ТестовыеДанные.План;
	
	Факт = "мой алгоритм";
	
	ПроверитьРавенствоТаблиц(План, Факт);
КонецПроцедуры

Процедура ТестДолжен_СоздатьДокументНаОснованииДокументаИПровести() Экспорт
	ТестовыеДанные = ТестовыеДанные("ТестДолжен_СоздатьДокументНаОснованииДокументаИПровести");
	
	План = ТестовыеДанные.План;
	
	НовыйДокумент = Документы.__Вид__.ПолучитьОбъект();
	НовыйДокумент.Заполнить(ТестовыеДанные.ИсходныеДанные.Ссылка);
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	Факт = Помощники().ПолучитьДанныеИзОбъектаПоТаблицеЭталону(НовыйДокумент, План);
	
	ПроверитьРавенствоТаблиц(План, Факт);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЗаполнениеТЧПриВводеНаОсновании() Экспорт
	ТестовыеДанные = ТестовыеДанные("ТестДолжен_ПроверитьЗаполнениеТЧПриВводеНаОсновании");
	
	План = ТестовыеДанные.План;
	
	НовыйДокумент = Документы.__Вид__.СоздатьДокумент();
	НовыйДокумент.Заполнить(ТестовыеДанные.ИсходныеДанные.Ссылка);
	
	Факт = НовыйДокумент.__ИмяТЧ__.Выгрузить();
	
	ПроверитьРавенствоТаблиц(План, Факт);
КонецПроцедуры


#КонецОбласти

#Область Помощники

Функция Плагин(ИмяПлагина)
	
	КаталогПлагинов = "E:\YandexDisk\Корус\Тестирование\Инструменты\Библиотеки и обработки тестирования\";
	Возврат ВнешниеОбработки.Создать(КаталогПлагинов + ИмяПлагина + ".epf", Ложь);

КонецФункции

Функция Помощники()
	Возврат Плагин("Помощники");
КонецФункции

Функция ТестовыеДанные(ИмяМакета)
	
	Макет = ПолучитьМакет(ИмяМакета);
	Возврат Плагин("xddDataLoader_new").СоздатьДанныеПоТабличномуДокументу(Макет);
	
КонецФункции

Процедура ПроверитьРавенствоТаблиц(Таблица1, Таблица2, Сообщение = "")
	
	Помощники().ПроверитьРавенствоТаблиц(Таблица1, Таблица2, Сообщение = "");
	
КонецПроцедуры

#КонецОбласти



