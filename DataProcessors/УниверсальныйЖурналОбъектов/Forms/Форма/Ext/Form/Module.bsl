
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьДеревоЗначений();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьНастройкиФормы();
	
	Для Каждого Строка Из Объект.Избранное Цикл
		Если Строка.ОткрыватьАвтоматически = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьСтраницуСДинамическимСписком(Строка.Тип, Строка.Имя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СохранитьНастройкиФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоКонфигурации

&НаКлиенте
Процедура ДеревоКонфигурацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ИДТекущейСтроки = Элемент.ТекущаяСтрока;
	ЭлементКоллекции = Объект.ДеревоКонфигурации.НайтиПоИдентификатору(ИДТекущейСтроки);
	Если ЭлементКоллекции.ПолучитьЭлементы().Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ДобавитьСтраницуСДинамическимСписком(ТекущиеДанные.Тип, ТекущиеДанные.Имя);
	Элементы.ГруппаЗакладки.ТекущаяСтраница = Элементы[ПолучитьИмяВкладкиДляСтрокиДереваМетаданных(ТекущиеДанные.Тип, ТекущиеДанные.Имя)];
	ОбновитьКнопкуИзбранноеНаВкладке(Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Избранное

&НаКлиенте
Процедура ИзбранноеПриИзменении(Элемент)
	ОбновитьКнопкуИзбранноеНаВсехВкладках();
КонецПроцедуры

&НаКлиенте
Процедура ИзбранноеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИзбранноеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ДобавитьСтраницуСДинамическимСписком(ТекущиеДанные.Тип, ТекущиеДанные.Имя);
	Элементы.ГруппаЗакладки.ТекущаяСтраница = Элементы[ПолучитьИмяВкладкиДляСтрокиДереваМетаданных(ТекущиеДанные.Тип, ТекущиеДанные.Имя)];
	ОбновитьКнопкуИзбранноеНаВкладке(Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьВкладку(Команда)
	ЗакрытьТекущуюВкладку();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУбратьИзИзбранных(Команда)
	Вкладка = Элементы.ГруппаЗакладки.ТекущаяСтраница;
	ТипВид = Элементы[Вкладка.Имя+"Имя"].Заголовок;
	ТипВид = СтрЗаменить(ТипВид, ".", Символы.ПС);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", СтрПолучитьСтроку(ТипВид,1));
	Отбор.Вставить("Имя", СтрПолучитьСтроку(ТипВид,2));
	
	НайденныеСтроки = Объект.Избранное.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() Тогда
		Объект.Избранное.Удалить(НайденныеСтроки[0]);
	Иначе
		НоваяСтрока = Объект.Избранное.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
	КонецЕсли;
	
	ОбновитьКнопкуИзбранноеНаВкладке(Вкладка.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаПоУмолчанию(Команда)
	ОткрытьФорму(ТекущийЭлемент.Заголовок + ".ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ДинамическийСписок_СтандартнаяКоманда(Команда)
	
	ИмяСписка = Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя + "Список";
	Список = Элементы[ИмяСписка];
	Действие = СтрЗаменить(Команда.Имя, "ДинамическийСписок_", "");
	
	Если Действие = "Создать" Тогда
		ИмяФормыЭлементаДинамическогоСписка = ПолучитьИмяОсновнойФормыТекущегоДинамическогоСписка();
		ОткрытьФорму(ИмяФормыЭлементаДинамическогоСписка);
	ИначеЕсли Действие = "Скопировать" Тогда
		Ссылка = Список.ТекущаяСтрока;
		ПараметрыОткрываемойФормы = Новый Структура("Ключ", Ссылка);
		ИмяФормыЭлементаДинамическогоСписка = ПолучитьИмяОсновнойФормыТекущегоДинамическогоСписка();
		ФормаИсточник = ПолучитьФорму(ИмяФормыЭлементаДинамическогоСписка, ПараметрыОткрываемойФормы);
		ФормаПриемник = ПолучитьФорму(ИмяФормыЭлементаДинамическогоСписка);
		КопироватьДанныеФормы(ФормаИсточник.Объект, ФормаПриемник.Объект);
		
		Буфер = Новый Структура("Номер,Дата,Код", "", ТекущаяДата(), "");
		ЗаполнитьЗначенияСвойств(ФормаПриемник.Объект, Буфер);
		
		ФормаПриемник.Открыть();
		
	ИначеЕсли Действие = "Провести" Тогда
		МассивСтрок = Список.ВыделенныеСтроки;
		Для Каждого Строка Из МассивСтрок Цикл
			ПровестиДокументНаСервере(Строка);
		КонецЦикла;
		
	ИначеЕсли Действие = "ОтменитьПроведение" Тогда
		МассивСтрок = Список.ВыделенныеСтроки;
		Для Каждого Строка Из МассивСтрок Цикл
			ОтменитьПроведениеДокументаНаСервере(Строка);
		КонецЦикла;
		
	ИначеЕсли Действие = "ПометитьНаУдаление" Тогда
		МассивСтрок = Список.ВыделенныеСтроки;
		Для Каждого Строка Из МассивСтрок Цикл
			ПометитьНаУдалениеЭлементСпискаНаСервере(Строка);
		КонецЦикла;
		
	ИначеЕсли Действие = "СнятьПометкуУдаления" Тогда
		МассивСтрок = Список.ВыделенныеСтроки;
		Для Каждого Строка Из МассивСтрок Цикл
			СнятьПометкуУдаленияСЭлементаСпискаНаСервере(Строка);
		КонецЦикла;
		
	ИначеЕсли Действие = "ИзменитьВРедактореРеквизитов" Тогда
		Ссылка = Список.ТекущаяСтрока;
		ИмяФормыРедактораРеквизитов = ПолучитьИмяФормыРедактораРеквизитов();
		Форма = ПолучитьФорму(ИмяФормыРедактораРеквизитов,,,Ссылка);
		Форма.ВыбСсылка = Ссылка;
		Форма.ПрочитатьОбъект();
		Форма.Открыть();
		
	ИначеЕсли Действие = "СоставПолей" Тогда
		ПараметрыОткрываемойФормы = Новый Структура;
		ПараметрыОткрываемойФормы.Вставить("Список", ПолучитьРеквизитыДинамическогоСпискаДляВыбора());
		ПараметрыОткрываемойФормы.Вставить("Заголовок", Элементы[Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя + "Имя"].Заголовок);
		Оповещение = Новый ОписаниеОповещения("ПриВыбореПолейЗавершение", ЭтаФорма, ПараметрыОткрываемойФормы);
		Форма = ОткрытьФорму(ПолучитьПолноеИмяФормы("ФормаВыбораИзСписка"), ПараметрыОткрываемойФормы, ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
	Список.Обновить();
	
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСтраницуСДинамическимСписком(Тип, Вид)
	ИмяСтраницы = ПолучитьИмяВкладкиДляСтрокиДереваМетаданных(Тип, Вид);
	
	Если НЕ Элементы.Найти(ИмяСтраницы) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", Тип);
	Отбор.Вставить("Имя", Вид);
	НайденныеСтроки = ОбработкаОбъект.ДеревоКонфигурации.Строки.НайтиСтроки(Отбор, Истина);
	
	СтрокаДереваФормы = ПолучитьСтрокуДереваФормыПоСтрокеДереваЗначений(Объект.ДеревоКонфигурации, НайденныеСтроки[0], ОбработкаОбъект.ДеревоКонфигурации);
	
	СтрокаДереваФормы.ИмяОткрытойВкладки = ИмяСтраницы;
	
	// Страница
    ЭлементСтраница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.ГруппаЗакладки);
    ЭлементСтраница.Вид = ВидГруппыФормы.Страница;
	ЭлементСтраница.Заголовок = ?(ПустаяСтрока(СтрокаДереваФормы.Синоним), СтрокаДереваФормы.Имя, СтрокаДереваФормы.Синоним);
	
	// ГруппаШапка
	ЭлементГруппа = Элементы.Добавить(ИмяСтраницы+"ГруппаШапка", Тип("ГруппаФормы"), ЭлементСтраница);
	ЭлементГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппа.ОтображатьЗаголовок = Ложь;
	ЭлементГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	Кнопка = Элементы.Добавить(ИмяСтраницы + "Избранное", Тип("КнопкаФормы"), ЭлементГруппа);
	Кнопка.ИмяКоманды = "ДобавитьУбратьИзИзбранных";
	Кнопка.Ширина = 5;
	Кнопка.ПропускатьПриВводе = Истина;
	
	
	Кнопка = Элементы.Добавить(ИмяСтраницы+"Имя", Тип("КнопкаФормы"), ЭлементГруппа);
	Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
	Кнопка.Шрифт = Новый Шрифт("Verdana", 12);
	Кнопка.РастягиватьПоГоризонтали = Истина;
	Кнопка.ИмяКоманды = "ОткрытьФормуСпискаПоУмолчанию";
	Кнопка.ПропускатьПриВводе = Истина;
	Кнопка.Заголовок = СтрокаДереваФормы.Тип + "." +СтрокаДереваФормы.Имя;
	
	Надпись = Элементы.Добавить(ИмяСтраницы+"Отступ", Тип("ДекорацияФормы"), ЭлементГруппа);
	Надпись.Вид = ВидДекорацииФормы.Надпись;
	Надпись.Заголовок = " ";
	Надпись.РастягиватьПоГоризонтали = Истина;
	
	Кнопка = Элементы.Добавить(ИмяСтраницы + "Закрыть", Тип("КнопкаФормы"), ЭлементГруппа);
	Кнопка.Заголовок = "Закрыть";
	Кнопка.ИмяКоманды = "ЗакрытьВкладку";
	Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
	
	// Динамический список
	ИмяРеквизита = ИмяСтраницы+"Список";
	ДобавляемыеРеквизиты = Новый Массив;
	Реквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДинамическийСписок"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ДинамическийСписок = ЭтаФорма[ИмяРеквизита];
	ДинамическийСписок.ОсновнаяТаблица = СтрокаДереваФормы.Тип + "." + СтрокаДереваФормы.Имя;
	
	ЭлементСписок = Элементы.Добавить(ИмяСтраницы+"Список", Тип("ТаблицаФормы"), ЭлементСтраница);
	ЭлементСписок.ПутьКДанным = ИмяРеквизита;
	ЭлементСписок.АктивизироватьПоУмолчанию = Истина;
	ЭлементСписок.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Низ;
	
	МассивРеквизитов = ПолучитьРеквизитыДинамическогоСпискаПоУмолчанию(ИмяРеквизита);
	Для Каждого РеквизитСписка Из МассивРеквизитов Цикл
		ЭлементКолонка = Элементы.Добавить(ЭлементСписок.Имя + РеквизитСписка.Имя, Тип("ПолеФормы"), ЭлементСписок);
		ЭлементКолонка.ПутьКДанным = ИмяРеквизита+"." + РеквизитСписка.Имя;
	КонецЦикла;
	
	ЭлементКоманднаяПанель = Элементы.Вставить(ЭлементСписок.Имя + "КоманднаяПанель1", Тип("ГруппаФормы"),ЭлементСтраница, ЭлементСписок);
	ЭлементКоманднаяПанель.Вид = ВидГруппыФормы.КоманднаяПанель;
	
	Префикс = "ДинамическийСписок_";
	Для Каждого Команда Из Команды Цикл
		Если Найти(Команда.Имя, Префикс) <> 1 Тогда
			Продолжить;
		КонецЕсли;
		Действие = СтрЗаменить(Команда.Имя, Префикс, "");
		
		Если (Действие = "Провести" ИЛИ Действие = "ОтменитьПроведение") и СтрокаДереваФормы.Тип <> "Документ" Тогда
			Продолжить;
		КонецЕсли;
		
		Кнопка = Элементы.Добавить(ЭлементКоманднаяПанель.Имя+Действие, Тип("КнопкаФормы"), ЭлементКоманднаяПанель);
		Кнопка.ИмяКоманды = Команда.Имя;
	КонецЦикла;
	
	ЭлементПоле = Элементы.Добавить(ЭлементСписок.Имя + "ОтборСписка", Тип("ПолеФормы"),ЭлементСтраница);
	ЭлементПоле.ПутьКДанным = Реквизит.Имя + ".Отбор";
	ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;
	
	ЭлементПоле = Элементы.Добавить(ЭлементСписок.Имя + "УсловноеОформлениеСписка", Тип("ПолеФормы"),ЭлементСтраница);
	ЭлементПоле.ПутьКДанным = Реквизит.Имя + ".УсловноеОформление";
	ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементПоле.Заголовок = "Условное оформление";
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьПолноеИмяФормы(ИмяФормы)

    СимволТочка = ".";
    ПозицияТочки = СтрДлина(ЭтаФорма.ИмяФормы);
    Пока Сред(ЭтаФорма.ИмяФормы, ПозицияТочки, 1) <> СимволТочка Цикл ПозицияТочки = ПозицияТочки - 1; КонецЦикла; //
    Возврат Лев(ЭтаФорма.ИмяФормы, ПозицияТочки) + ИмяФормы;

КонецФункции

&НаСервере
Функция ПолучитьИмяВкладкиДляСтрокиДереваМетаданных(Тип, Вид)
	Возврат "Страница"+Тип + "_" + Вид;
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыДинамическогоСпискаПоУмолчанию(ИмяДинамическогСписка)
	ДинамическийСписок = ЭтаФорма[ИмяДинамическогСписка];
	ТипДинамическогоСписка = ДинамическийСписок.ОсновнаяТаблица;
	
	МассивРеквизитов = ПолучитьРеквизиты(ИмяДинамическогСписка);
	
	МассивРеквизитовПоУмолчанию = Новый Массив;
	Если Найти(ТипДинамическогоСписка, "Документ.") = 1 Тогда
		МассивРеквизитовПоУмолчанию.Добавить("Номер");
		МассивРеквизитовПоУмолчанию.Добавить("Дата");
	ИначеЕсли Найти(ТипДинамическогоСписка, "Справочник.") = 1 Тогда
		МассивРеквизитовПоУмолчанию.Добавить("Код");
		МассивРеквизитовПоУмолчанию.Добавить("Наименование");
	ИначеЕсли Найти(ТипДинамическогоСписка, "РегистрНакопления.") = 1 Тогда
		
		Для Каждого Реквизит Из МассивРеквизитов Цикл
			МассивРеквизитовПоУмолчанию.Добавить(Реквизит.Имя);
		КонецЦикла;
		
	КонецЕсли;
	
	Для сч = -МассивРеквизитов.ВГраница() По 0 Цикл
		РеквизитСписка = МассивРеквизитов[-сч];
		Если ПустаяСтрока(РеквизитСписка.Заголовок) Тогда
		ИначеЕсли РеквизитСписка.Имя = "МоментВремени" Тогда
		ИначеЕсли НЕ МассивРеквизитовПоУмолчанию.Найти(РеквизитСписка.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивРеквизитов.Удалить(-сч);
	КонецЦикла;
	
	Возврат МассивРеквизитов;
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыДинамическогоСпискаДляВыбора()
	СписокДляВыбора = Новый СписокЗначений;
	
	ИмяДинамическогоСписка = Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя + "Список";
	МассивРеквизитов = ПолучитьРеквизиты(ИмяДинамическогоСписка);
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если ПустаяСтрока(Реквизит.Заголовок) Тогда
			Продолжить;
		КонецЕсли;
		ЭлементСписка = СписокДляВыбора.Добавить(Реквизит.Имя, Реквизит.Заголовок);
		НайденныйЭлементФормы = Элементы.Найти(ИмяДинамическогоСписка+Реквизит.Имя);
		Если НайденныйЭлементФормы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЭлементСписка.Пометка = НайденныйЭлементФормы.Видимость;
	КонецЦикла;
	
	Возврат СписокДляВыбора;
КонецФункции


&НаСервере
Процедура ЗакрытьТекущуюВкладку()
	ГруппаВкладок = Элементы.ГруппаЗакладки;
	ТекущаяВкладка = ГруппаВкладок.ТекущаяСтраница;
	ИмяСтраницы = ТекущаяВкладка.Имя;
	Индекс = ГруппаВкладок.ПодчиненныеЭлементы.Индекс(ТекущаяВкладка)+1;
	Индекс = Мин(ГруппаВкладок.ПодчиненныеЭлементы.Количество()-2, Индекс);
	Если Индекс >= 0 Тогда
		ГруппаВкладок.ТекущаяСтраница = ГруппаВкладок.ПодчиненныеЭлементы[Индекс];
	КонецЕсли;
	Элементы.Удалить(ТекущаяВкладка);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("ИмяОткрытойВкладки", ИмяСтраницы);
	НайденныеСтроки = ОбработкаОбъект.ДеревоКонфигурации.Строки.НайтиСтроки(Отбор, Истина);
	Для Каждого СтрокаДереваЗначений Из НайденныеСтроки Цикл
		СтрокаДереваФормы = ПолучитьСтрокуДереваФормыПоСтрокеДереваЗначений(Объект.ДеревоКонфигурации, СтрокаДереваЗначений, ОбработкаОбъект.ДеревоКонфигурации);
		СтрокаДереваФормы.ИмяОткрытойВкладки = "";
	КонецЦикла;
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	МассивУдаляемыхРеквизитов.Добавить(ИмяСтраницы+"Список");
	ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрокуДереваФормыПоСтрокеДереваЗначений(ДеревоФормы, СтрокаДереваЗначений, ДеревоЗначений)
	
	МассивИндексов = Новый Массив;
	
	ТекущаяСтрокаДереваЗначений = СтрокаДереваЗначений;
	Родитель = ТекущаяСтрокаДереваЗначений.Родитель;
	Пока ЗначениеЗаполнено(Родитель) Цикл
		МассивИндексов.Вставить(0, Родитель.Строки.Индекс(ТекущаяСтрокаДереваЗначений));
		
		ТекущаяСтрокаДереваЗначений = Родитель;
		Родитель = ТекущаяСтрокаДереваЗначений.Родитель;
	КонецЦикла;
	
	МассивИндексов.Вставить(0, ДеревоЗначений.Строки.Индекс(ТекущаяСтрокаДереваЗначений));
	
	ТекущаяСтрокаДереваФормы = ДеревоФормы;
	Для Каждого Индекс Из МассивИндексов Цикл
		ТекущаяСтрокаДереваФормы = ТекущаяСтрокаДереваФормы.ПолучитьЭлементы()[Индекс];
	КонецЦикла;
	
	Возврат ТекущаяСтрокаДереваФормы;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяОсновнойФормыТекущегоДинамическогоСписка()
	ИмяТекущейВкладки = Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("ИмяОткрытойВкладки", ИмяТекущейВкладки);
	СтрокаДерева = ОбработкаОбъект.ДеревоКонфигурации.Строки.НайтиСтроки(Отбор, Истина)[0];
	
	Возврат СтрокаДерева.Тип+"." + СтрокаДерева.Имя + ".ФормаОбъекта";
	
КонецФункции

&НаСервере
Процедура ПровестиДокументНаСервере(Ссылка)
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	
	Если ДокументОбъект.ПометкаУдаления Тогда
		ДокументОбъект.ПометкаУдаления = Ложь;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеДокументаНаСервере(Ссылка)
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	
	Если НЕ ДокументОбъект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
		Сообщить("Не удалось отменить проведение документа: " + Ссылка);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеЭлементСпискаНаСервере(Ссылка)
	ЭлементСпискаОбъект = Ссылка.ПолучитьОбъект();
	
	Буфер = Новый Структура("Проведен");
	ЗаполнитьЗначенияСвойств(Буфер, Ссылка);
	Если Буфер.Проведен = Истина Тогда
		Попытка
			ЭлементСпискаОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			Сообщить("Не удалось отменить проведение документа: " + Ссылка);
		КонецПопытки;
	КонецЕсли;
	
	ЭлементСпискаОбъект.ПометкаУдаления = Истина;
	Попытка
		ЭлементСпискаОбъект.Записать();
	Исключение
		Сообщить("Не пометить на удаление документ: " + Ссылка);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура СнятьПометкуУдаленияСЭлементаСпискаНаСервере(Ссылка)
	ЭлементСпискаОбъект = Ссылка.ПолучитьОбъект();
	
	Если ЭлементСпискаОбъект.ПометкаУдаления = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементСпискаОбъект.ПометкаУдаления = Ложь;
	ЭлементСпискаОбъект.Записать();
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФормыРедактораРеквизитов()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ОбработкаОбъект.ПолучитьМакет("РедакторРеквизитов");
	АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ИмяОбработки = ВнешниеОбработки.Подключить(АдресХранилища,,Ложь);
	
	Возврат "ВнешняяОбработка." + ИмяОбработки + ".Форма.УправляемаяФорма";
КонецФункции

&НаКлиенте
Процедура ПриВыбореПолейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьДинамическийСписокПоВыбраннымПолям(ДополнительныеПараметры.Список);
КонецПроцедуры

&НаСервере
Процедура НастроитьДинамическийСписокПоВыбраннымПолям(СписокПолей)
	ИмяДинамическогоСписка = Элементы.ГруппаЗакладки.ТекущаяСтраница.Имя + "Список";
	Для Каждого ЭлементСписка Из СписокПолей Цикл
		ИмяПоля = ИмяДинамическогоСписка + ЭлементСписка.Значение;
		ЭлементКолонка = Элементы.Найти(ИмяПоля);
		Если ЭлементКолонка = Неопределено и ЭлементСписка.Пометка = Ложь Тогда
			Продолжить;
		ИначеЕсли ЭлементКолонка = Неопределено Тогда
			ЭлементКолонка = Элементы.Добавить(ИмяПоля, Тип("ПолеФормы"), Элементы[ИмяДинамическогоСписка]);
			ЭлементКолонка.ПутьКДанным = ИмяДинамическогоСписка+"." + ЭлементСписка.Значение;
		Иначе
			ЭлементКолонка.Видимость = ЭлементСписка.Пометка;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьКнопкуИзбранноеНаВкладке(ИмяВкладки)
	Вкладка = Элементы[ИмяВкладки];
	ТипВид = Элементы[Вкладка.Имя+"Имя"].Заголовок;
	ТипВид = СтрЗаменить(ТипВид, ".", Символы.ПС);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", СтрПолучитьСтроку(ТипВид,1));
	Отбор.Вставить("Имя", СтрПолучитьСтроку(ТипВид,2));
	
	НайденныеСтроки = Объект.Избранное.НайтиСтроки(Отбор);
	
	ЭлементКнопка = Элементы[ИмяВкладки+"Избранное"];
	Если НайденныеСтроки.Количество() Тогда
		ЭлементКнопка.Вид = ВидКнопкиФормы.Гиперссылка;
	Иначе
		ЭлементКнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьКнопкуИзбранноеНаВсехВкладках()
	Для Каждого Вкладка Из Элементы.ГруппаЗакладки.ПодчиненныеЭлементы Цикл
		Если Вкладка = Элементы.СтраницаГлавная Тогда
			Продолжить;
		КонецЕсли;
		
		ОбновитьКнопкуИзбранноеНаВкладке(Вкладка.Имя);
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура СохранитьНастройкиФормы()
	
	Попытка
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("Избранное", Объект.Избранное.Выгрузить());
		СохраненныеНастройки = ЗначениеВСтрокуВнутр(СтруктураНастроек)
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()
	
	Если ПустаяСтрока(СохраненныеНастройки) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастроек = ЗначениеИзСтрокиВнутр(СохраненныеНастройки);
	Если СтруктураНастроек.Свойство("Избранное") Тогда
		Объект.Избранное.Загрузить(СтруктураНастроек.Избранное);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
